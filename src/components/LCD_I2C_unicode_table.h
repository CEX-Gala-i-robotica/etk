#ifndef LCD_I2C_UNICODE_TABLE_H
#define LCD_I2C_UNICODE_TABLE_H

#include <stdint.h>



#define UNICODE_TABLE_SIZE 10


const uint8_t unicode_table[UNICODE_TABLE_SIZE][8] =
{
    // ă
    {
        0b01010,
        0b00100,
        0b00000,
        0b01110,
        0b00001,
        0b01111,
        0b10001,
        0b01111
    },
    // Ă
    {
        0b01010,
        0b00100,
        0b00000,
        0b01110,
        0b10001,
        0b11111,
        0b10001,
        0b10001
    },
    // â
    {
        0b00100,
        0b01010,
        0b00000,
        0b01110,
        0b00001,
        0b01111,
        0b10001,
        0b01111
    },
    // Â
    {
        0b00100,
        0b01010,
        0b01110,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
        0b00000
    },
    // î
    {
        0b00100,
        0b01010,
        0b01110,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
        0b00000
    },
    // Î
    {
        0b00100,
        0b01010,
        0b01110,
        0b00100,
        0b00100,
        0b00100,
        0b01110,
        0b00000
    },
    // ț
    {
        0b00100,
        0b01010,
        0b00000,
        0b00110,
        0b00010,
        0b00010,
        0b00010,
        0b00111
    },
    // Ț
    {
        0b00010,
        0b01111,
        0b00010,
        0b00010,
        0b00010,
        0b10010,
        0b01100,
        0b00100
    },
    // ș
    {
        0b00000,
        0b01110,
        0b10000,
        0b01110,
        0b00001,
        0b01110,
        0b00100,
        0b01000
    },
    // Ș
    {
        0b01110,
        0b10001,
        0b10000,
        0b01110,
        0b00001,
        0b10001,
        0b01110,
        0b01000
    }
};


const unsigned char common_unicodes[UNICODE_TABLE_SIZE][2] =
{
    {0xC4, 0x83}, // ă
    {0xC4, 0x82}, // Ă
    {0xC3, 0xA2}, // â
    {0xC3, 0x82}, // Â
    {0xC3, 0xAE}, // î
    {0xC3, 0x8E}, // Î
    {0xC8, 0x9B}, // ț
    {0xC8, 0x9A}, // Ț
    {0xC8, 0x99}, // ș
    {0xC8, 0x99}, // Ș
};

#endif